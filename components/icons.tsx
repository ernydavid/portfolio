import React from 'react'

interface IconProps {
  color?: string; // Color puede ser una variable tailwind como 'text-red-500' o 'text-blue-500'
  size?: string; // Tamaño del ícono (puedes usar clases de Tailwind como 'w-6 h-6')
  strokeWidth?: number; // Espesor del trazo del ícono si se usa con 'stroke'
}

export const Icon: React.FC<IconProps> = ({ color = 'text-gray-500', size = 'w-6 h-6', strokeWidth = 2 }) => {
  return (
    <svg
      xmlns='http://www.w3.org/2000/svg'
      fill='none'
      viewBox='0 0 24 24'
      stroke='currentColor'
      className={`${size} ${color}`} // Aplicar el tamaño y color de Tailwind
      strokeWidth={strokeWidth}
    >
      <path
        strokeLinecap='round'
        strokeLinejoin='round'
        d='M12 4v16m8-8H4'
      />
    </svg>
  )
}

export const ReactIcon: React.FC<IconProps> = ({ color = 'text-gray-500', size = 'w-6 h-6', strokeWidth = 2 }) => {
  return (
    <svg
      xmlns='http://www.w3.org/2000/svg'
      fill='none'
      viewBox='0 0 24 24'
      stroke='currentColor'
      className={`${size} ${color}`} // Aplicar el tamaño y color de Tailwind
      strokeWidth={strokeWidth}
    >
      <path d='M23.2 12.1344C23.2 14.7856 18.1856 16.9344 12 16.9344C5.8144 16.9344 0.800003 14.7856 0.800003 12.1344C0.800003 9.4832 5.8144 7.3344 12 7.3344C18.1856 7.3344 23.2 9.4832 23.2 12.1344Z' />
      <path d='M6.6656 21.9824C8.9968 23.2464 13.2736 19.8592 16.2208 14.4208C19.1664 8.9808 19.6656 3.5488 17.3344 2.2864C15.0032 1.0224 10.7264 4.4096 7.7792 9.848C4.8336 15.288 4.3344 20.72 6.6656 21.9824Z' />
      <path d='M17.3344 21.9824C15.0032 23.2464 10.7264 19.8592 7.7792 14.4208C4.8336 8.9808 4.3344 3.5488 6.6656 2.2864C8.9968 1.0224 13.2736 4.4096 16.2208 9.848C19.1664 15.288 19.6656 20.72 17.3344 21.9824Z' />
      <path d='M10.4 12.1344C10.4 12.5587 10.5686 12.9657 10.8686 13.2658C11.1687 13.5658 11.5757 13.7344 12 13.7344C12.4244 13.7344 12.8313 13.5658 13.1314 13.2658C13.4314 12.9657 13.6 12.5587 13.6 12.1344C13.6 11.7101 13.4314 11.3031 13.1314 11.003C12.8313 10.703 12.4244 10.5344 12 10.5344C11.5757 10.5344 11.1687 10.703 10.8686 11.003C10.5686 11.3031 10.4 11.7101 10.4 12.1344Z' />
    </svg>
  )
}

export const NextJsIcon: React.FC<IconProps> = ({ color = 'text-gray-500', size = 'w-6 h-6', strokeWidth = 2 }) => {
  return (
    <svg
      xmlns='http://www.w3.org/2000/svg'
      fill='none'
      viewBox='0 0 24 24'
      stroke='currentColor'
      className={`${size} ${color}`} // Aplicar el tamaño y color de Tailwind
      strokeWidth={strokeWidth}
    >
      <g clipPath='url(#clip0_6_27)'>
        <path fillRule='evenodd' clipRule='evenodd' d='M3.45388e-07 12C0.000263747 9.92946 0.536271 7.89421 1.55591 6.09213C2.57555 4.29005 4.04412 2.78246 5.81885 1.71594C7.59358 0.649408 9.61407 0.0602318 11.6839 0.00568984C13.7537 -0.0488522 15.8024 0.433096 17.6309 1.40468C19.4593 2.37626 21.0052 3.80441 22.1184 5.55029C23.2315 7.29617 23.874 9.30036 23.9833 11.368C24.0926 13.4357 23.665 15.4964 22.7422 17.3499C21.8193 19.2035 20.4326 20.7866 18.7168 21.9456L7.8496 6.736C7.75094 6.59874 7.61133 6.49625 7.45081 6.44325C7.29029 6.39025 7.11711 6.38946 6.95611 6.441C6.79512 6.49253 6.65458 6.59374 6.55467 6.7301C6.45476 6.86646 6.40062 7.03096 6.4 7.2V19.2H8V9.696L17.328 22.7552C15.4982 23.6619 13.4674 24.0866 11.4276 23.9892C9.38788 23.8918 7.40673 23.2755 5.67169 22.1986C3.93666 21.1217 2.50515 19.6198 1.51265 17.8352C0.520154 16.0505 -0.00048954 14.0421 3.45388e-07 12ZM16 16V6.4H17.6V16H16Z' fill='currentColor' />
      </g>
      <defs>
        <clipPath id='clip0_6_27'>
          <rect width='24' height='24' fill='currentColor' />
        </clipPath>
      </defs>

    </svg>
  )
}

export const PostgresIcon: React.FC<IconProps> = ({ color = 'text-gray-500', size = 'w-6 h-6', strokeWidth = 2 }) => {
  return (
    <svg
      xmlns='http://www.w3.org/2000/svg'
      fill='none'
      viewBox='0 0 24 24'
      stroke='currentColor'
      className={`${size} ${color}`} // Aplicar el tamaño y color de Tailwind
      strokeWidth={strokeWidth}
    >
      <path d='M16.805 1C15.9248 1.00824 15.0496 1.13264 14.202 1.37L14.142 1.388C13.6083 1.29649 13.0684 1.24601 12.527 1.237C11.414 1.218 10.457 1.48 9.687 1.917C8.927 1.661 7.351 1.22 5.69 1.308C4.533 1.369 3.271 1.71 2.336 2.668C1.403 3.626 0.909999 5.108 1.014 7.125C1.042 7.682 1.205 8.589 1.477 9.765C1.747 10.94 2.129 12.315 2.604 13.57C3.079 14.825 3.6 15.954 4.414 16.72C4.82 17.104 5.379 17.427 6.038 17.4C6.501 17.382 6.92 17.185 7.281 16.894C7.457 17.119 7.645 17.217 7.816 17.308C8.031 17.422 8.241 17.5 8.458 17.552C9.05892 17.7061 9.68481 17.737 10.298 17.643C10.565 17.6 10.846 17.516 11.126 17.396C11.136 17.698 11.148 17.994 11.161 18.294C11.199 19.244 11.224 20.121 11.518 20.89C11.565 21.016 11.694 21.663 12.205 22.234C12.715 22.806 13.715 23.162 14.853 22.926C15.656 22.759 16.678 22.458 17.356 21.522C18.026 20.596 18.329 19.268 18.389 17.113C18.404 16.997 18.422 16.898 18.441 16.805L18.601 16.819H18.619C19.476 16.857 20.406 16.739 21.183 16.389C21.871 16.079 22.391 15.767 22.77 15.212C22.865 15.075 22.969 14.909 22.997 14.622C23.025 14.337 22.857 13.889 22.576 13.683C22.013 13.269 21.66 13.426 21.281 13.503C20.9077 13.583 20.529 13.6273 20.145 13.636C21.238 11.852 22.021 9.956 22.468 8.278C22.732 7.288 22.881 6.375 22.893 5.577C22.905 4.779 22.838 4.072 22.345 3.46C20.804 1.55 18.637 1.022 16.961 1.004C16.909 1.00267 16.857 1.00233 16.805 1.003V1ZM16.761 1.587C18.346 1.572 20.372 2.004 21.826 3.807C22.153 4.212 22.25 4.804 22.239 5.534C22.227 6.263 22.088 7.135 21.834 8.091C21.341 9.943 20.409 12.101 19.096 14.039C19.1426 14.0713 19.193 14.0978 19.246 14.118C19.52 14.228 20.144 14.322 21.391 14.074C21.704 14.009 21.934 13.966 22.172 14.142C22.229 14.1893 22.2742 14.2491 22.3042 14.3167C22.3342 14.3844 22.3482 14.4581 22.345 14.532C22.3318 14.6437 22.2894 14.7499 22.222 14.84C21.982 15.191 21.506 15.524 20.896 15.798C20.357 16.042 19.583 16.169 18.897 16.177C18.553 16.18 18.236 16.154 17.967 16.073L17.949 16.067C17.845 17.038 17.606 18.957 17.451 19.832C17.326 20.538 17.108 21.099 16.691 21.519C16.275 21.939 15.687 22.192 14.895 22.357C13.914 22.561 13.199 22.341 12.738 21.964C12.278 21.589 12.067 21.09 11.94 20.784C11.853 20.574 11.808 20.301 11.764 19.936C11.7156 19.499 11.6833 19.0604 11.667 18.621C11.6383 17.8507 11.629 17.0798 11.639 16.309C11.229 16.672 10.719 16.914 10.172 17.005C9.522 17.112 8.94 17.007 8.593 16.923C8.42288 16.8811 8.25838 16.819 8.103 16.738C7.941 16.655 7.788 16.561 7.686 16.375C7.6259 16.2688 7.6067 16.1443 7.632 16.025C7.66475 15.9038 7.7373 15.797 7.838 15.722C8.026 15.574 8.273 15.492 8.646 15.416C9.326 15.281 9.563 15.188 9.707 15.077C9.83 14.982 9.969 14.79 10.215 14.507L10.212 14.47C9.77359 14.4571 9.3438 14.345 8.955 14.142C8.814 14.286 8.09 15.029 7.207 16.059C6.836 16.49 6.426 16.737 5.993 16.755C5.56 16.773 5.169 16.561 4.837 16.249C4.172 15.623 3.642 14.546 3.18 13.329C2.72 12.111 2.344 10.755 2.078 9.6C1.81 8.445 1.652 7.514 1.63 7.065C1.53 5.156 1.99 3.87 2.78 3.059C3.57 2.248 4.652 1.94 5.708 1.882C7.602 1.776 9.401 2.417 9.765 2.555C10.466 2.093 11.369 1.805 12.498 1.823C13.0331 1.83044 13.5657 1.89752 14.086 2.023L14.105 2.015C14.3343 1.937 14.567 1.87167 14.803 1.819C15.4455 1.67398 16.1014 1.59689 16.76 1.589L16.761 1.587ZM16.904 2.201H16.767C16.226 2.20829 15.6868 2.26722 15.157 2.377C16.2087 2.83508 17.1328 3.54289 17.849 4.439C18.2829 4.9751 18.6428 5.56706 18.919 6.199C19.023 6.441 19.093 6.646 19.132 6.804C19.152 6.884 19.166 6.951 19.17 7.021C19.1737 7.0653 19.17 7.10992 19.159 7.153L19.153 7.165C19.182 7.968 18.977 8.512 18.952 9.278C18.933 9.834 19.079 10.487 19.115 11.198C19.149 11.868 19.066 12.603 18.618 13.325C18.6553 13.369 18.6913 13.413 18.726 13.457C19.911 11.647 20.766 9.643 21.221 7.936C21.464 7.016 21.594 6.183 21.605 5.523C21.615 4.863 21.488 4.384 21.326 4.185C20.058 2.612 18.343 2.212 16.904 2.201ZM12.379 2.435C11.262 2.437 10.46 2.765 9.853 3.255C9.226 3.762 8.806 4.455 8.53 5.166C8.26285 5.87653 8.09951 6.62186 8.045 7.379L8.058 7.372C8.395 7.188 8.838 7.005 9.312 6.899C9.787 6.793 10.298 6.76 10.761 6.934C11.224 7.108 11.607 7.518 11.746 8.14C12.411 11.126 11.539 12.236 11.217 13.073C11.0962 13.3768 10.9921 13.6869 10.905 14.002C10.945 13.9907 10.9853 13.9827 11.026 13.978C11.2017 13.9685 11.3769 14.0029 11.536 14.078C11.86 14.208 12.082 14.48 12.202 14.792C12.2333 14.8747 12.2557 14.9613 12.269 15.052C12.2823 15.09 12.2887 15.129 12.288 15.169C12.2521 16.3108 12.2561 17.4535 12.3 18.595C12.322 19.089 12.354 19.523 12.395 19.866C12.435 20.208 12.493 20.468 12.53 20.556C12.65 20.85 12.827 21.234 13.147 21.495C13.467 21.756 13.924 21.929 14.761 21.755C15.487 21.604 15.935 21.395 16.235 21.092C16.533 20.791 16.712 20.372 16.826 19.729C16.997 18.766 17.341 15.975 17.382 15.449C17.364 15.054 17.424 14.749 17.554 14.517C17.689 14.279 17.897 14.133 18.076 14.054C18.166 14.014 18.25 13.988 18.319 13.969C18.2455 13.8673 18.1688 13.7679 18.089 13.671C17.8304 13.3685 17.6184 13.0291 17.46 12.664C17.3837 12.5138 17.3026 12.3661 17.217 12.221C17.092 12.001 16.933 11.726 16.767 11.417C16.434 10.798 16.072 10.048 15.884 9.317C15.697 8.588 15.669 7.833 16.149 7.3C16.575 6.827 17.321 6.631 18.442 6.741C18.409 6.645 18.389 6.565 18.333 6.437C18.08 5.85599 17.7493 5.31202 17.35 4.82C16.4 3.642 14.863 2.474 12.487 2.436H12.379V2.435ZM6.103 2.482C5.983 2.482 5.863 2.48533 5.743 2.492C4.789 2.545 3.887 2.814 3.242 3.478C2.595 4.141 2.17 5.229 2.262 7.031C2.281 7.371 2.434 8.327 2.696 9.461C2.958 10.597 3.33 11.932 3.776 13.111C4.222 14.291 4.764 15.318 5.278 15.804C5.537 16.047 5.762 16.145 5.966 16.137C6.171 16.127 6.417 16.013 6.719 15.662C7.26899 15.0184 7.83928 14.3924 8.429 13.785C8.01233 13.4356 7.69157 12.9858 7.497 12.478C7.30401 11.975 7.24542 11.4305 7.327 10.898C7.424 10.22 7.437 9.586 7.426 9.086C7.414 8.598 7.378 8.274 7.378 8.071V8.043C7.37697 6.98614 7.56633 5.93773 7.937 4.948C8.201 4.266 8.595 3.573 9.186 3.012C8.606 2.827 7.576 2.545 6.461 2.492C6.3411 2.48558 6.22106 2.48225 6.101 2.482H6.103ZM17.817 7.324C17.176 7.332 16.816 7.493 16.627 7.703C16.359 8.001 16.334 8.523 16.5 9.167C16.666 9.811 17.007 10.532 17.329 11.13C17.489 11.43 17.645 11.7 17.771 11.918C17.898 12.138 17.991 12.294 18.047 12.428C18.1003 12.5487 18.1563 12.659 18.215 12.759C18.463 12.25 18.508 11.751 18.482 11.23C18.449 10.586 18.295 9.927 18.318 9.26C18.343 8.48 18.502 7.971 18.516 7.368C18.2841 7.33973 18.0507 7.32504 17.817 7.324ZM10.037 7.429C9.84111 7.43049 9.64596 7.45329 9.455 7.497C9.07535 7.58651 8.70894 7.72501 8.365 7.909C8.24967 7.969 8.13967 8.03867 8.035 8.118L8.015 8.136C8.021 8.27 8.048 8.595 8.06 9.072C8.07 9.595 8.058 10.262 7.954 10.982C7.728 12.55 8.9 13.848 10.278 13.85C10.358 13.528 10.491 13.202 10.623 12.858C11.007 11.855 11.762 11.124 11.126 8.269C11.022 7.802 10.816 7.613 10.532 7.506C10.373 7.45078 10.2053 7.4247 10.037 7.429ZM17.517 7.616H17.565C17.6277 7.618 17.6843 7.62467 17.735 7.636C17.781 7.64525 17.825 7.66251 17.865 7.687C17.8832 7.69772 17.899 7.71218 17.9112 7.72941C17.9234 7.74665 17.9319 7.76627 17.936 7.787V7.795C17.9386 7.83895 17.9267 7.88254 17.902 7.919C17.8741 7.96942 17.8391 8.01556 17.798 8.056C17.7011 8.15884 17.5733 8.22729 17.434 8.251C17.2974 8.26717 17.1596 8.23343 17.046 8.156C17.0003 8.12579 16.9589 8.08945 16.923 8.048C16.8927 8.01562 16.8719 7.97547 16.863 7.932C16.8608 7.91061 16.8633 7.88901 16.8702 7.86865C16.8771 7.84829 16.8883 7.82965 16.903 7.814C16.935 7.78044 16.9725 7.7527 17.014 7.732C17.1724 7.65928 17.3438 7.61915 17.518 7.614L17.517 7.616ZM10.129 7.77C10.179 7.77 10.2313 7.774 10.286 7.782C10.43 7.802 10.559 7.839 10.657 7.894C10.705 7.91867 10.747 7.951 10.783 7.991C10.8017 8.013 10.8157 8.03733 10.825 8.064C10.8343 8.09067 10.8373 8.11833 10.834 8.147C10.8249 8.20002 10.8002 8.24912 10.763 8.288C10.7243 8.33458 10.6788 8.37504 10.628 8.408C10.5038 8.49257 10.3531 8.52918 10.204 8.511C10.0527 8.48657 9.91356 8.41314 9.808 8.302C9.76412 8.25724 9.72645 8.20679 9.696 8.152C9.66486 8.10405 9.65109 8.04687 9.657 7.99C9.671 7.89 9.756 7.84 9.837 7.81C9.93064 7.7803 10.0289 7.76809 10.127 7.774L10.129 7.77ZM18.689 14.502H18.686C18.547 14.552 18.433 14.572 18.336 14.612C18.2394 14.6478 18.1593 14.718 18.111 14.809C18.051 14.914 18.001 15.101 18.016 15.419C18.0591 15.4474 18.1063 15.469 18.156 15.483C18.317 15.531 18.588 15.563 18.891 15.558C19.493 15.551 20.235 15.415 20.629 15.237C20.952 15.091 21.252 14.901 21.52 14.673C20.203 14.937 19.46 14.867 19.003 14.684C18.8903 14.638 18.7846 14.5774 18.689 14.502ZM11.101 14.587H11.081C11.031 14.591 10.958 14.607 10.818 14.759C10.488 15.117 10.374 15.341 10.102 15.551C9.832 15.761 9.479 15.872 8.775 16.012C8.552 16.056 8.425 16.105 8.339 16.144C8.367 16.166 8.364 16.172 8.405 16.193C8.508 16.248 8.641 16.296 8.747 16.323C9.05 16.396 9.547 16.482 10.066 16.396C10.585 16.31 11.124 16.069 11.584 15.443C11.664 15.335 11.672 15.175 11.607 15.003C11.54 14.833 11.396 14.685 11.294 14.643C11.2331 14.6143 11.1679 14.5961 11.101 14.589V14.587Z' fill='currentColor' />
    </svg>
  )
}

export const TypeScriptIcon: React.FC<IconProps> = ({ color = 'text-gray-500', size = 'w-6 h-6', strokeWidth = 2 }) => {
  return (
    <svg
      xmlns='http://www.w3.org/2000/svg'
      fill='none'
      viewBox='0 0 24 24'
      stroke='currentColor'
      className={`${size} ${color}`} // Aplicar el tamaño y color de Tailwind
      strokeWidth={strokeWidth}
    >
      <g clipPath='url(#clip0_6_37)'>
        <path fillRule='evenodd' clipRule='evenodd' d='M0 0H24V24H0V0ZM16 9.6C15.1513 9.6 14.3374 9.93714 13.7373 10.5373C13.1371 11.1374 12.8 11.9513 12.8 12.8C12.8 13.6487 13.1371 14.4626 13.7373 15.0627C14.3374 15.6629 15.1513 16 16 16H17.6C18.0243 16 18.4313 16.1686 18.7314 16.4686C19.0314 16.7687 19.2 17.1757 19.2 17.6C19.2 18.0243 19.0314 18.4313 18.7314 18.7314C18.4313 19.0314 18.0243 19.2 17.6 19.2H16C15.5757 19.2 15.1687 19.0314 14.8686 18.7314C14.5686 18.4313 14.4 18.0243 14.4 17.6H12.8C12.8 18.4487 13.1371 19.2626 13.7373 19.8627C14.3374 20.4629 15.1513 20.8 16 20.8H17.6C18.4487 20.8 19.2626 20.4629 19.8627 19.8627C20.4629 19.2626 20.8 18.4487 20.8 17.6C20.8 16.7513 20.4629 15.9374 19.8627 15.3373C19.2626 14.7371 18.4487 14.4 17.6 14.4H16C15.5757 14.4 15.1687 14.2314 14.8686 13.9314C14.5686 13.6313 14.4 13.2243 14.4 12.8C14.4 12.3757 14.5686 11.9687 14.8686 11.6686C15.1687 11.3686 15.5757 11.2 16 11.2H17.8672C18.6032 11.2 19.2 11.7968 19.2 12.5328V12.8H20.8V12.5328C20.8 10.9136 19.488 9.6 17.8672 9.6H16ZM4.8 9.6H12.8V11.2H9.6V20.8H8V11.2H4.8V9.6Z' fill='currentColor' />
      </g>
      <defs>
        <clipPath id='clip0_6_37'>
          <rect width='24' height='24' fill='currentColor' />
        </clipPath>
      </defs>
    </svg>
  )
}

export const TailwindIcon: React.FC<IconProps> = ({ color = 'text-gray-500', size = 'w-6 h-6', strokeWidth = 2 }) => {
  return (
    <svg
      xmlns='http://www.w3.org/2000/svg'
      fill='none'
      viewBox='0 0 24 24'
      stroke='currentColor'
      className={`${size} ${color}`} // Aplicar el tamaño y color de Tailwind
      strokeWidth={strokeWidth}
    >
      <g clipPath='url(#clip0_6_39)'>
        <path d='M12 4C10.3584 4 8.9472 4.4432 7.84 5.392C6.7392 6.336 6.0208 7.7072 5.6208 9.4176C5.57835 9.59875 5.60036 9.78903 5.68305 9.95571C5.76575 10.1224 5.90395 10.255 6.07388 10.3308C6.24381 10.4066 6.43484 10.4207 6.61409 10.3709C6.79334 10.321 6.94961 10.2102 7.056 10.0576C7.5616 9.3344 8.0672 8.9008 8.5536 8.6768C9.024 8.4608 9.5312 8.4176 10.1136 8.5728C10.6992 8.7296 11.1536 9.1904 11.8656 9.9648L11.8896 9.9904C12.4272 10.5744 13.0816 11.2864 13.9776 11.84C14.9088 12.4144 16.0656 12.8 17.6 12.8C19.2416 12.8 20.6528 12.3568 21.76 11.408C22.8608 10.464 23.5808 9.0928 23.9792 7.3824C24.0217 7.20125 23.9996 7.01097 23.917 6.84429C23.8343 6.67762 23.6961 6.54498 23.5261 6.46921C23.3562 6.39343 23.1652 6.37925 22.9859 6.42912C22.8067 6.47898 22.6504 6.58976 22.544 6.7424C22.0384 7.4656 21.5328 7.8992 21.0464 8.1232C20.576 8.3392 20.0688 8.3824 19.4864 8.2272C18.9008 8.0704 18.4464 7.6096 17.7344 6.8352L17.7104 6.8096C17.1728 6.2256 16.5184 5.5136 15.6224 4.96C14.6912 4.3856 13.5344 4 12 4ZM6.4 11.2C4.7584 11.2 3.3472 11.6432 2.24 12.592C1.1392 13.536 0.420801 14.9072 0.0208014 16.6176C-0.0216544 16.7987 0.000358748 16.989 0.0830526 17.1557C0.165747 17.3224 0.303949 17.455 0.473878 17.5308C0.643807 17.6066 0.834835 17.6207 1.01409 17.5709C1.19334 17.521 1.34961 17.4102 1.456 17.2576C1.9616 16.5344 2.4672 16.1008 2.9536 15.8768C3.424 15.6608 3.9312 15.6176 4.5136 15.7728C5.0992 15.9296 5.5536 16.3904 6.2656 17.1648L6.2896 17.1904C6.8272 17.7744 7.4816 18.4864 8.3776 19.04C9.3088 19.6144 10.4656 20 12 20C13.6416 20 15.0528 19.5568 16.16 18.608C17.2608 17.664 17.9808 16.2928 18.3792 14.5824C18.4217 14.4012 18.3996 14.211 18.317 14.0443C18.2343 13.8776 18.0961 13.745 17.9261 13.6692C17.7562 13.5934 17.5652 13.5793 17.3859 13.6291C17.2067 13.679 17.0504 13.7898 16.944 13.9424C16.4384 14.6656 15.9328 15.0992 15.4464 15.3232C14.976 15.5392 14.4688 15.5824 13.8864 15.4272C13.3008 15.2704 12.8464 14.8096 12.1344 14.0352L12.1104 14.0096C11.5744 13.4256 10.9184 12.7136 10.0224 12.16C9.0912 11.584 7.9344 11.2 6.4 11.2Z' fill='currentColor' />
      </g>
      <defs>
        <clipPath id='clip0_6_39'>
          <rect width='24' height='24' fill='currentColor' />
        </clipPath>
      </defs>
    </svg>
  )
}

export const GithubIcon: React.FC<IconProps> = ({ color = 'text-gray-500', size = 'w-6 h-6', strokeWidth = 2 }) => {
  return (
    <svg
      xmlns='http://www.w3.org/2000/svg'
      fill='none'
      viewBox='0 0 24 24'
      stroke='currentColor'
      className={`${size} ${color}`} // Aplicar el tamaño y color de Tailwind
      strokeWidth={strokeWidth}
    >
      <g clipPath='url(#clip0_6_41)'>
        <path d='M14.9728 3.432C13.017 2.97702 10.983 2.97702 9.0272 3.432C7.8976 2.7392 7.0352 2.4208 6.408 2.2864C6.14024 2.22642 5.86638 2.19796 5.592 2.2016C5.46717 2.20536 5.34294 2.22035 5.2208 2.2464L5.2048 2.2496L5.1984 2.2528H5.1936L5.4128 3.0224L5.1936 2.2544C5.08119 2.28616 4.97711 2.34216 4.88865 2.41845C4.8002 2.49474 4.72953 2.58948 4.6816 2.696C4.20956 3.75313 4.11963 4.94147 4.4272 6.0576C3.63014 7.0227 3.19598 8.23632 3.2 9.488C3.2 11.9728 3.9328 13.6432 5.1824 14.7168C6.0576 15.4688 7.12 15.8688 8.1856 16.0976C8.01604 16.5897 7.95278 17.1121 8 17.6304V18.5872C7.3488 18.7232 6.8976 18.68 6.576 18.5744C6.1744 18.4416 5.8656 18.1744 5.5696 17.7904C5.4153 17.5831 5.27113 17.3685 5.1376 17.1472L5.0464 16.9984C4.93134 16.8068 4.81185 16.618 4.688 16.432C4.384 15.9824 3.9328 15.4192 3.2032 15.2272L2.4288 15.024L2.0224 16.5728L2.7968 16.776C2.9248 16.808 3.0912 16.928 3.3648 17.3296C3.47022 17.4881 3.57159 17.6492 3.6688 17.8128L3.7776 17.9888C3.928 18.232 4.1008 18.5008 4.3008 18.7632C4.7056 19.2912 5.2576 19.824 6.0768 20.0944C6.6368 20.28 7.2736 20.3248 8 20.2128V23.2C8 23.4122 8.08429 23.6157 8.23432 23.7657C8.38434 23.9157 8.58783 24 8.8 24H15.2C15.4122 24 15.6157 23.9157 15.7657 23.7657C15.9157 23.6157 16 23.4122 16 23.2V17.5008C16 16.9952 15.9776 16.5328 15.8352 16.1024C16.896 15.8784 17.9504 15.4784 18.8208 14.7264C20.0688 13.6448 20.8 11.9584 20.8 9.4592V9.4576C20.7965 8.21616 20.3622 7.01443 19.5712 6.0576C19.8784 4.94197 19.7885 3.75426 19.3168 2.6976C19.2692 2.59095 19.1989 2.49601 19.1107 2.41944C19.0225 2.34288 18.9187 2.28654 18.8064 2.2544L18.5872 3.0224C18.8064 2.2544 18.8048 2.2544 18.8032 2.2544L18.8 2.2528L18.7936 2.2496L18.7792 2.2464L18.6592 2.2224C18.5756 2.20879 18.4911 2.20183 18.4064 2.2016C18.132 2.19796 17.8582 2.22642 17.5904 2.2864C16.9648 2.4208 16.1024 2.7392 14.9728 3.432Z' fill='currentColor' />
      </g>
      <defs>
        <clipPath id='clip0_6_41'>
          <rect width='24' height='24' fill='currentColor' />
        </clipPath>
      </defs>
    </svg>
  )
}

export const AstroIcon: React.FC<IconProps> = ({ color = 'text-gray-500', size = 'w-6 h-6', strokeWidth = 2 }) => {
  return (
    <svg
      xmlns='http://www.w3.org/2000/svg'
      fill='none'
      viewBox='0 0 24 24'
      stroke='currentColor'
      className={`${size} ${color}`} // Aplicar el tamaño y color de Tailwind
      strokeWidth={strokeWidth}
    >
      <g clipPath='url(#clip0_6_43)'>
        <path d='M8.358 20.162C7.172 19.092 6.826 16.846 7.32 15.218C8.176 16.244 9.363 16.57 10.592 16.753C12.489 17.036 14.352 16.93 16.114 16.075C16.316 15.977 16.502 15.846 16.722 15.715C16.888 16.188 16.931 16.665 16.873 17.152C16.733 18.337 16.135 19.252 15.185 19.946C14.805 20.223 14.403 20.471 14.01 20.733C12.805 21.537 12.479 22.48 12.932 23.852L12.976 24C12.3995 23.7525 11.9097 23.3389 11.569 22.812C11.2141 22.2732 11.025 21.6422 11.025 20.997C11.021 20.677 11.021 20.355 10.977 20.039C10.871 19.27 10.505 18.926 9.816 18.906C9.109 18.886 8.549 19.317 8.401 19.996C8.389 20.049 8.373 20.1 8.356 20.161L8.358 20.162ZM2.397 15.717C2.397 15.717 5.637 14.142 8.887 14.142L11.338 6.577C11.43 6.211 11.698 5.963 12 5.963C12.302 5.963 12.57 6.211 12.662 6.577L15.112 14.142C18.962 14.142 21.603 15.717 21.603 15.717L16.088 0.727C15.93 0.285 15.663 -4.76837e-07 15.303 -4.76837e-07H8.697C8.337 -4.76837e-07 8.082 0.285 7.913 0.727L2.397 15.717Z' fill='currentColor' />
      </g>
      <defs>
        <clipPath id='clip0_6_43'>
          <rect width='24' height='24' fill='currentColor' />
        </clipPath>
      </defs>
    </svg>
  )
}

export const StripeIcon: React.FC<IconProps> = ({ color = 'text-gray-500', size = 'w-6 h-6', strokeWidth = 2 }) => {
  return (
    <svg
      xmlns='http://www.w3.org/2000/svg'
      fill='none'
      viewBox='0 0 24 24'
      stroke='currentColor'
      className={`${size} ${color}`} // Aplicar el tamaño y color de Tailwind
      strokeWidth={strokeWidth}
    >
      <g clipPath='url(#clip0_6_45)'>
        <path d='M3.55933 0C2.76368 0 2.00061 0.316071 1.43801 0.87868C0.875397 1.44129 0.559326 2.20435 0.559326 3L0.559326 21C0.559326 21.7956 0.875397 22.5587 1.43801 23.1213C2.00061 23.6839 2.76368 24 3.55933 24H21.5593C22.355 24 23.118 23.6839 23.6806 23.1213C24.2433 22.5587 24.5593 21.7956 24.5593 21V3C24.5593 2.20435 24.2433 1.44129 23.6806 0.87868C23.118 0.316071 22.355 0 21.5593 0L3.55933 0ZM12.8983 8.0775C12.0223 8.0775 11.4928 8.3235 11.4928 8.967C11.4928 9.669 12.4033 9.978 13.5328 10.362C15.3748 10.9845 17.7988 11.8065 17.8093 14.8515C17.8093 17.802 15.4453 19.5 12.0043 19.5C10.452 19.4935 8.91694 19.1741 7.49083 18.561V14.637C8.87983 15.396 10.6333 15.957 12.0058 15.957C12.9313 15.957 13.5928 15.7095 13.5928 14.9505C13.5928 14.1735 12.6058 13.818 11.4133 13.389C9.59833 12.735 7.30933 11.91 7.30933 9.165C7.30933 6.2475 9.54133 4.5 12.8983 4.5C14.3012 4.48745 15.6935 4.74461 16.9993 5.2575V9.132C15.7423 8.457 14.1553 8.0775 12.8983 8.0775Z' fill='currentColor' />
      </g>
      <defs>
        <clipPath id='clip0_6_45'>
          <rect width='24' height='24' fill='currentColor' transform='translate(0.559326)' />
        </clipPath>
      </defs>
    </svg>
  )
}

export const SupabaseIcon: React.FC<IconProps> = ({ color = 'text-gray-500', size = 'w-6 h-6', strokeWidth = 2 }) => {
  return (
    <svg
      xmlns='http://www.w3.org/2000/svg'
      fill='none'
      viewBox='0 0 24 24'
      stroke='currentColor'
      className={`${size} ${color}`} // Aplicar el tamaño y color de Tailwind
      strokeWidth={strokeWidth}
    >
      <path d='M3.64333 15.25C1.97933 15.25 1.04333 13.338 2.06333 12.024L10.7693 0.806C11.3533 0.0539995 12.5593 0.465999 12.5593 1.42V8.75H21.4753C23.1383 8.75 24.0753 10.662 23.0553 11.976L14.3493 23.194C13.7653 23.946 12.5593 23.534 12.5593 22.581V15.25H3.64333Z' fill='currentColor' />
    </svg>
  )
}

export const StrapiIcon: React.FC<IconProps> = ({ color = 'text-gray-500', size = 'h-6', strokeWidth = 2 }) => {
  return (
    <svg
      xmlns='http://www.w3.org/2000/svg'
      fill='none'
      viewBox='0 0 99 24'
      stroke='currentColor'
      className={`${size} ${color}`} // Aplicar el tamaño y color de Tailwind
      strokeWidth={strokeWidth}
    >
      <g clipPath='url(#clip0_41_142)'>
        <path d='M95.3812 3.49517C95.7839 3.89926 96.2595 4.10131 96.8079 4.10131C97.3736 4.10131 97.8577 3.89926 98.2604 3.49517C98.6631 3.09107 98.8645 2.61389 98.8645 2.06362C98.8645 1.51334 98.6631 1.03181 98.2604 0.619008C97.8577 0.206208 97.3736 -0.000128417 96.8079 -4.17321e-07C96.2593 -4.17321e-07 95.7838 0.206336 95.3812 0.619008C94.9784 1.03181 94.777 1.51334 94.777 2.06362C94.777 2.61389 94.9784 3.09107 95.3812 3.49517ZM52.0126 8.77133C52.0126 8.81357 51.9784 8.84794 51.9362 8.84794H49.1077V14.2132C49.1077 14.6603 49.2191 14.987 49.4419 15.1933C49.6646 15.3998 49.9903 15.5159 50.4188 15.5416C50.79 15.5639 51.2386 15.5636 51.7645 15.5409L51.8934 15.5349L51.9322 15.533C51.9425 15.5325 51.9529 15.5341 51.9626 15.5377C51.9724 15.5413 51.9813 15.5468 51.9888 15.5539C51.9964 15.5611 52.0024 15.5697 52.0065 15.5792C52.0106 15.5888 52.0128 15.599 52.0128 15.6094V18.4781C52.0127 18.4969 52.0057 18.515 51.9931 18.5289C51.9806 18.5429 51.9633 18.5518 51.9446 18.5539L51.8928 18.5597C49.677 18.7966 48.1103 18.5773 47.1926 17.9017C46.2584 17.2138 45.7913 15.9843 45.7914 14.213V8.84794H43.6314C43.6112 8.84783 43.5918 8.83972 43.5774 8.82537C43.5631 8.81102 43.5551 8.7916 43.555 8.77133V5.72582C43.555 5.68358 43.5892 5.64941 43.6314 5.64941H45.7914V3.51898C45.7915 3.48933 45.8002 3.46034 45.8163 3.43551C45.8325 3.41067 45.8555 3.39105 45.8826 3.37901L49.0003 2.00237C49.012 1.99718 49.0247 1.99499 49.0374 1.99599C49.0501 1.99699 49.0624 2.00115 49.0731 2.0081C49.0838 2.01504 49.0925 2.02455 49.0986 2.03576C49.1047 2.04696 49.1079 2.05951 49.1078 2.07226V5.64922H51.936C51.9782 5.64922 52.0128 5.68378 52.0128 5.72602L52.0126 8.77133ZM58.026 7.86758C58.3345 7.04198 58.8444 6.42291 59.5555 6.01037C60.2065 5.63277 60.9256 5.4279 61.7128 5.39578L61.7662 5.39386L61.8563 5.39232C61.8664 5.39217 61.8764 5.39403 61.8858 5.39779C61.8952 5.40155 61.9037 5.40714 61.9109 5.41423C61.9181 5.42133 61.9238 5.42978 61.9277 5.43911C61.9316 5.44843 61.9336 5.45844 61.9336 5.46854V8.9687C61.9336 9.04166 61.8701 9.09792 61.7973 9.09139C60.8412 9.00448 59.9825 9.21562 59.2214 9.7248C58.4245 10.2579 58.026 11.1435 58.026 12.3815V18.4698C58.026 18.4902 58.018 18.5097 58.0036 18.5241C57.9893 18.5385 57.9698 18.5466 57.9494 18.5466H54.7862C54.7659 18.5465 54.7465 18.5384 54.7322 18.524C54.7179 18.5096 54.7098 18.4901 54.7098 18.4698V5.72582C54.7098 5.68358 54.744 5.64941 54.7862 5.64941H57.9494C57.9917 5.64941 58.026 5.68358 58.026 5.72582V7.86758ZM69.4399 5.28787C71.2393 5.28787 72.636 5.91552 73.6301 7.17082V5.72544C73.6301 5.6832 73.6645 5.64902 73.7067 5.64902H76.8699C76.9121 5.64902 76.9463 5.6832 76.9463 5.72544V18.4698C76.9463 18.5121 76.9121 18.5462 76.8699 18.5462H73.7067C73.6864 18.5462 73.667 18.5381 73.6526 18.5238C73.6383 18.5095 73.6302 18.4901 73.6301 18.4698V17.0244C72.636 18.2797 71.2393 18.9074 69.4399 18.9074C67.726 18.9074 66.2563 18.2497 65.031 16.9342C63.8056 15.6186 63.193 14.0065 63.193 12.0977C63.193 10.189 63.8056 8.57683 65.031 7.26125C66.2563 5.94566 67.726 5.28787 69.4399 5.28787ZM70.0566 8.46067C69.0282 8.46067 68.1798 8.80032 67.5114 9.47962C66.843 10.1589 66.5088 11.0316 66.5088 12.0977C66.5088 13.1638 66.843 14.0408 67.5114 14.7287C68.18 15.3994 69.0284 15.7348 70.0566 15.7348C71.0848 15.7348 71.9374 15.3952 72.6144 14.716C73.2914 14.0369 73.6299 13.1641 73.6299 12.0977C73.6299 11.0314 73.2913 10.1587 72.6142 9.47962C71.9375 8.80032 71.0849 8.46067 70.0566 8.46067ZM86.9153 5.28787C88.6463 5.28787 90.1245 5.9456 91.35 7.26106C92.5753 8.57664 93.188 10.1888 93.188 12.0975C93.188 14.0063 92.5753 15.6184 91.35 16.934C90.1245 18.2496 88.6463 18.9074 86.9153 18.9074C85.1158 18.9074 83.7276 18.2797 82.7509 17.0244V23.6287C82.7508 23.649 82.7427 23.6684 82.7284 23.6828C82.714 23.6971 82.6945 23.7052 82.6742 23.7053H79.511C79.4907 23.7052 79.4713 23.6971 79.4569 23.6828C79.4426 23.6684 79.4345 23.649 79.4344 23.6287V5.72544C79.4344 5.6832 79.4688 5.64902 79.511 5.64902H82.6742C82.7165 5.64902 82.7509 5.6832 82.7509 5.72544V7.17082C83.7276 5.91552 85.1158 5.28787 86.9153 5.28787ZM86.2981 8.46067C85.2698 8.46067 84.4215 8.80032 83.7531 9.47962C83.0847 10.1589 82.7505 11.0316 82.7505 12.0977C82.7505 13.1638 83.0847 14.0408 83.7531 14.7287C84.4215 15.3994 85.2698 15.7348 86.2981 15.7348C87.3263 15.7348 88.1789 15.3952 88.8561 14.716C89.5329 14.0369 89.8714 13.1641 89.8714 12.0977C89.8714 11.0314 89.5329 10.1587 88.8561 9.47962C88.1791 8.80032 87.3264 8.46067 86.2981 8.46067ZM95.2395 18.5464C95.2192 18.5464 95.1998 18.5383 95.1854 18.524C95.1711 18.5097 95.163 18.4903 95.1629 18.47V5.72582C95.1629 5.70552 95.171 5.68607 95.1854 5.67171C95.1997 5.65735 95.2192 5.64927 95.2395 5.64922H98.4027C98.423 5.64927 98.4425 5.65735 98.4568 5.67171C98.4712 5.68607 98.4793 5.70552 98.4793 5.72582V18.47C98.4793 18.4903 98.4712 18.5098 98.4568 18.5241C98.4425 18.5385 98.423 18.5466 98.4027 18.5466L95.2395 18.5464ZM36.044 10.1503C35.5898 9.93523 35.3628 9.65574 35.3628 9.31181C35.3628 8.98502 35.5041 8.7271 35.7869 8.53805C36.0696 8.34899 36.4252 8.2544 36.8536 8.25427C37.6754 8.25427 38.2961 8.57555 38.7157 9.21811C38.7448 9.26304 38.8021 9.28128 38.8508 9.25958L41.6488 8.01734C41.6586 8.013 41.6674 8.00664 41.6746 7.99867C41.6818 7.99069 41.6872 7.9813 41.6905 7.97109C41.6937 7.96088 41.6948 7.95009 41.6936 7.93943C41.6925 7.92878 41.689 7.91849 41.6836 7.90925L41.6256 7.8119C41.6108 7.78771 41.5968 7.76467 41.5853 7.74662C41.1055 6.99014 40.4851 6.42643 39.7073 5.99712C38.8504 5.52429 37.8991 5.28787 36.8536 5.28787C35.4655 5.28787 34.3044 5.65331 33.3704 6.38419C32.4364 7.11494 31.9693 8.11661 31.9693 9.38918C31.9693 10.2318 32.1964 10.9326 32.6506 11.4916C33.1048 12.0503 33.6575 12.4586 34.3087 12.7165C34.8984 12.9507 35.5004 13.1525 36.1121 13.3212L36.2625 13.3615C36.9137 13.5335 37.4664 13.727 37.9206 13.9419C38.3747 14.1568 38.6018 14.4362 38.6018 14.7802C38.6018 15.5197 38.0106 15.8895 36.8281 15.8895C35.7025 15.8895 34.9224 15.4721 34.4878 14.6373C34.4704 14.6025 34.4403 14.5757 34.4038 14.5623C34.3672 14.549 34.3269 14.5501 34.2912 14.5655L31.5013 15.8058C31.4919 15.81 31.4835 15.8159 31.4765 15.8234C31.4695 15.8309 31.464 15.8397 31.4605 15.8493C31.457 15.8589 31.4554 15.8691 31.4559 15.8793C31.4564 15.8895 31.459 15.8995 31.4634 15.9087L31.4953 15.974C32.4703 17.9296 34.2479 18.9074 36.8281 18.9074C38.3019 18.9074 39.5315 18.5505 40.517 17.8368C41.5026 17.1233 41.9954 16.1044 41.9954 14.7802C41.9954 13.9034 41.7682 13.1725 41.3138 12.5875C40.8598 12.0031 40.3071 11.5861 39.6559 11.3366C39.0659 11.1099 38.4638 10.9161 37.8524 10.756L37.7021 10.7176C37.0508 10.5543 36.4981 10.3653 36.044 10.1503Z' fill='currentColor' fillOpacity='1' />
        <path d='M0.560448 8.25677C0.560448 4.36454 0.560448 2.41843 1.76966 1.20922C2.97888 -4.76837e-07 4.92499 -4.76837e-07 8.81722 -4.76837e-07H16.1213C20.0135 -4.76837e-07 21.9596 -4.76837e-07 23.1688 1.20922C24.378 2.41843 24.378 4.36454 24.378 8.25677V15.5608C24.378 19.4531 24.378 21.3992 23.1688 22.6084C21.9596 23.8176 20.0135 23.8176 16.1213 23.8176H8.81722C4.92499 23.8176 2.97888 23.8176 1.76966 22.6084C0.560448 21.3992 0.560448 19.4531 0.560448 15.5608V8.25677Z' fill='currentColor' fillOpacity='0.7' />
        <path d='M16.9945 7.22458H8.976V11.3134H13.0646V15.402H17.1533V7.38336C17.1533 7.34125 17.1365 7.30086 17.1068 7.27108C17.077 7.24131 17.0366 7.22458 16.9945 7.22458Z' fill='currentColor' fillOpacity='1' />
        <path d='M12.9059 11.3134H13.0979V11.5054H12.9059V11.3134Z' fill='currentColor' fillOpacity='0.6' />
        <path d='M8.97581 11.3134H12.906C12.9938 11.3134 13.0648 11.3844 13.0648 11.472V15.4022H9.13478C9.09267 15.4022 9.05228 15.3855 9.02251 15.3557C8.99273 15.326 8.976 15.2856 8.976 15.2435L8.97581 11.3134Z' fill='currentColor' fillOpacity='0.6' />
        <path d='M13.0646 15.402H17.1533L13.2 19.3551C13.1889 19.3662 13.1748 19.3738 13.1594 19.3768C13.144 19.3799 13.1281 19.3783 13.1136 19.3723C13.0991 19.3663 13.0867 19.3562 13.078 19.3431C13.0693 19.3301 13.0646 19.3148 13.0646 19.2991V15.402ZM8.97581 11.3134H5.07917C5.06347 11.3134 5.04813 11.3087 5.03508 11.3C5.02203 11.2913 5.01186 11.2789 5.00584 11.2644C4.99983 11.2499 4.99824 11.2339 5.00127 11.2185C5.00431 11.2031 5.01184 11.189 5.02291 11.1779L8.97619 7.22458L8.97581 11.3134Z' fill='currentColor' fillOpacity='0.8' />
      </g>
      <defs>
        <clipPath id='clip0_41_142'>
          <rect width='98.3062' height='24' fill='currentColor' transform='translate(0.559326)' />
        </clipPath>
      </defs>
    </svg>
  )
}
